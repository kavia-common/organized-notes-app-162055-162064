{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service `NotesService` that manages CRUD operations and in-memory storage for notes, including localStorage persistence.", "external_files": ["../models/note.model"], "external_methods": [], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "An Angular service managing notes including creation, update, deletion, and retrieval, with local storage persistence."}], "methods": [{"name": "createNote", "description": "Creates a new note with provided data, assigns ID and timestamps, updates the notes list, and persists data."}, {"name": "updateNote", "description": "Updates an existing note identified by ID with the specified changes, updates timestamp, and persists data."}, {"name": "deleteNote", "description": "Deletes a note identified by ID and updates the persistent storage."}, {"name": "getNote", "description": "Retrieves a note by its ID."}, {"name": "persist", "description": "Saves the current notes list into local storage."}, {"name": "uuid", "description": "Generates a UUID for new notes, using crypto if available, otherwise falling back to a random pattern."}], "calls": ["this._notes.set()", "this._notes.update()", "storage.getItem()", "storage.setItem()", "this.uuid()", "JSON.parse()", "JSON.stringify()"], "search-terms": ["NotesService", "localStorage persistence", "Angular CRUD notes", "signal", "computed", "note management"], "state": 2, "file_id": 22, "knowledge_revision": 85, "git_revision": "", "revision_history": [{"45": ""}, {"80": ""}, {"84": ""}, {"85": ""}], "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "_notes", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private readonly _notes = signal<Note[]>([]);$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "g", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const g: any = typeof globalThis !== 'undefined' ? globalThis : {};$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const note: Note = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^        const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^        const parsed: Note[] = JSON.parse(raw);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const r = (Math.random() * 16) | 0;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const v = c === 'x' ? r : (r & 0x3) | 0x8;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const raw = storage ? storage.getItem('notes_data_v1') : null;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "set", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const set = new Set(this._notes().map(n => (n.category || '').trim()).filter(Boolean));$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "set", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const set = new Set<string>();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "storage", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const raw = storage ? storage.getItem('notes_data_v1') : null;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "storage", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const storage = g && g.localStorage ? (g.localStorage as Storage) : null;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "storage", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const storage = g && g.localStorage ? (g.localStorage as any) : null;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    let updated: Note | undefined;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "v", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const v = c === 'x' ? r : (r & 0x3) | 0x8;$/", "language": "TypeScript", "kind": "constant"}], "hash": "c795c3d32d7019a8093ca7a78a362756", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/notes.service.ts", "fields": [{"name": "private readonly _notes = signal<Note[]>([]);", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}, {"name": "let updated: Note | undefined;", "scope": "", "scopeKind": "", "description": "unavailable"}]}