{"is_source_file": true, "format": "TypeScript (Angular component)", "description": "This file defines an Angular component named NoteEditorComponent that provides a user interface for editing a note, including fields for title, content, category, and tags. It handles input changes, emits events for save, cancel, and remove actions, and manages local state for form fields.", "external_files": ["./note-editor.component.html", "./note-editor.component.css", "../../models/note.model"], "external_methods": ["EventEmitter.emit"], "published": ["save", "cancel", "remove"], "classes": [{"name": "NoteEditorComponent", "description": "Angular standalone component for editing notes, with input properties for note data, categories, and tags, and output events for save, cancel, and remove actions. It reacts to input changes and assembles note data to emit on save."}], "methods": [{"name": "ngOnChanges", "description": "Lifecycle hook that updates form fields when the input note object changes."}, {"name": "onSave", "description": "Handles the save action by assembling note data and emitting the save event."}], "calls": ["this.save.emit", "this.cancel.emit", "this.remove.emit"], "search-terms": ["Angular NoteEditorComponent", "note editing form", "note model", "Angular @Input @Output", "ngOnChanges", "note modification"], "state": 2, "file_id": 32, "knowledge_revision": 65, "git_revision": "", "ctags": [{"_type": "tag", "name": "NoteEditorComponent", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^export class NoteEditorComponent {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "allCategories", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Input() allCategories: string[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "allTags", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Input() allTags: string[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "n", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^      const n = this.note;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Input() note: Note | null = null;$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^  @Output() save = new EventEmitter<{ title: string; content: string; category: string; tags: st/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/organized-notes-app-162055-162064/notes_frontend/src/app/components/note-editor/note-editor.component.ts", "pattern": "/^    const tags = this.tagsText$/", "language": "TypeScript", "kind": "constant"}], "hash": "283f0618659bd36ac7185c0ce419ce0a", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/components/note-editor/note-editor.component.ts", "fields": [{"name": "@Input() allCategories: string[] = [];", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "@Input() allTags: string[] = [];", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "@Input() note: Note | null = null;", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "@Output() save = new EventEmitter<{ title: string; content: string; category: string; tags: st/", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"65": ""}]}